# ==============================================================================
# Prometheus Configuration for OpenChat
# ==============================================================================
# This configuration defines monitoring targets and rules for OpenChat services

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'openchat-monitor'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s

  # OpenChat Server
  - job_name: 'openchat-server'
    static_configs:
      - targets: ['openchat-server-prod:3000']
    scrape_interval: 10s
    metrics_path: '/metrics'
    scheme: 'http'
    params:
      format: ['prometheus']

  # OpenChat Web Application
  - job_name: 'openchat-web'
    static_configs:
      - targets: ['openchat-web-prod:3001']
    scrape_interval: 30s
    metrics_path: '/api/metrics'
    scheme: 'http'

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # ElectricSQL Service
  - job_name: 'electric'
    static_configs:
      - targets: ['openchat-electric-prod:5133']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Node Exporter (System metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Nginx (if using as reverse proxy)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Docker containers
  - job_name: 'docker'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

# Remote write configuration (for external monitoring services)
remote_write:
  - url: "${PROMETHEUS_REMOTE_WRITE_URL}"
    basic_auth:
      username: "${PROMETHEUS_REMOTE_WRITE_USERNAME}"
      password: "${PROMETHEUS_REMOTE_WRITE_PASSWORD}"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|process_.*|promhttp_.*'
        action: drop

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    path: /prometheus
    wal-compression: true